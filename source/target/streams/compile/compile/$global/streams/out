[0m[[0m[31merror[0m] [0m[0m/home/mokoyo/Desktop/Faks34/PP/2020_ParGenAlg/source/src/main/scala/main.scala:54:50: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : (String, String)[0m
[0m[[0m[31merror[0m] [0m[0m required: (Nothing, Nothing)[0m
[0m[[0m[31merror[0m] [0m[0m            (acc, index) => acc + (header(index) -> values(index))[0m
[0m[[0m[31merror[0m] [0m[0m                                                 ^[0m
[0m[[0m[31merror[0m] [0m[0m/home/mokoyo/Desktop/Faks34/PP/2020_ParGenAlg/source/src/main/scala/main.scala:57:65: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : String("costMatrix")[0m
[0m[[0m[31merror[0m] [0m[0m required: Nothing[0m
[0m[[0m[31merror[0m] [0m[0m    val costMatrixPath: String = geneticAlgorithmParameters.get("costMatrix").get.replace("\"", "")[0m
[0m[[0m[31merror[0m] [0m[0m                                                                ^[0m
[0m[[0m[31merror[0m] [0m[0m/home/mokoyo/Desktop/Faks34/PP/2020_ParGenAlg/source/src/main/scala/main.scala:58:65: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : String("cities")[0m
[0m[[0m[31merror[0m] [0m[0m required: Nothing[0m
[0m[[0m[31merror[0m] [0m[0m    val citiesPath: String     = geneticAlgorithmParameters.get("cities").get.replace("\"", "")[0m
[0m[[0m[31merror[0m] [0m[0m                                                                ^[0m
[0m[[0m[31merror[0m] [0m[0m/home/mokoyo/Desktop/Faks34/PP/2020_ParGenAlg/source/src/main/scala/main.scala:59:65: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : String("image")[0m
[0m[[0m[31merror[0m] [0m[0m required: Nothing[0m
[0m[[0m[31merror[0m] [0m[0m    val imagePath: String      = geneticAlgorithmParameters.get("image").get.replace("\"", "")[0m
[0m[[0m[31merror[0m] [0m[0m                                                                ^[0m
[0m[[0m[31merror[0m] [0m[0m/home/mokoyo/Desktop/Faks34/PP/2020_ParGenAlg/source/src/main/scala/main.scala:60:65: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : String("populationSize")[0m
[0m[[0m[31merror[0m] [0m[0m required: Nothing[0m
[0m[[0m[31merror[0m] [0m[0m    val populationSize: Int    = geneticAlgorithmParameters.get("populationSize").get.toInt[0m
[0m[[0m[31merror[0m] [0m[0m                                                                ^[0m
[0m[[0m[31merror[0m] [0m[0m/home/mokoyo/Desktop/Faks34/PP/2020_ParGenAlg/source/src/main/scala/main.scala:61:65: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : String("maxIterations")[0m
[0m[[0m[31merror[0m] [0m[0m required: Nothing[0m
[0m[[0m[31merror[0m] [0m[0m    val maxIterations: Int     = geneticAlgorithmParameters.get("maxIterations").get.toInt[0m
[0m[[0m[31merror[0m] [0m[0m                                                                ^[0m
[0m[[0m[31merror[0m] [0m[0m/home/mokoyo/Desktop/Faks34/PP/2020_ParGenAlg/source/src/main/scala/main.scala:62:65: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : String("tournamentSize")[0m
[0m[[0m[31merror[0m] [0m[0m required: Nothing[0m
[0m[[0m[31merror[0m] [0m[0m    val tournamentSize: Int    = geneticAlgorithmParameters.get("tournamentSize").get.toInt[0m
[0m[[0m[31merror[0m] [0m[0m                                                                ^[0m
[0m[[0m[31merror[0m] [0m[0m/home/mokoyo/Desktop/Faks34/PP/2020_ParGenAlg/source/src/main/scala/main.scala:63:65: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : String("elitismRate")[0m
[0m[[0m[31merror[0m] [0m[0m required: Nothing[0m
[0m[[0m[31merror[0m] [0m[0m    val elitismRate: Double    = geneticAlgorithmParameters.get("elitismRate").get.toDouble[0m
[0m[[0m[31merror[0m] [0m[0m                                                                ^[0m
[0m[[0m[31merror[0m] [0m[0m/home/mokoyo/Desktop/Faks34/PP/2020_ParGenAlg/source/src/main/scala/main.scala:64:65: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : String("mutationRate")[0m
[0m[[0m[31merror[0m] [0m[0m required: Nothing[0m
[0m[[0m[31merror[0m] [0m[0m    val mutationRate: Double   = geneticAlgorithmParameters.get("mutationRate").get.toDouble[0m
[0m[[0m[31merror[0m] [0m[0m                                                                ^[0m
[0m[[0m[31merror[0m] [0m[0m/home/mokoyo/Desktop/Faks34/PP/2020_ParGenAlg/source/src/main/scala/main.scala:65:65: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : String("numOfThreads")[0m
[0m[[0m[31merror[0m] [0m[0m required: Nothing[0m
[0m[[0m[31merror[0m] [0m[0m    val numOfThreads: Int      = geneticAlgorithmParameters.get("numOfThreads").get.toInt[0m
[0m[[0m[31merror[0m] [0m[0m                                                                ^[0m
[0m[[0m[31merror[0m] [0m[0m10 errors found[0m
